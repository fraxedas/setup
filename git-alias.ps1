git config --global alias.lg  "log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(dim white)- %an%C(reset)%C(auto)%d%C(reset)' --all"
git config --global alias.close '!f() { BR=$(git rev-parse --abbrev-ref HEAD); if [ "$BR" != "master" ]; then echo "[*] Current branch: $BR"; echo "[>] Switching to master..."; git checkout master && echo "[>] Pulling latest changes..."; git pull && echo "[>] Pruning remote-tracking branches..."; git fetch --prune && echo "[x] Deleting branch $BR..."; git branch -D "$BR"; else echo "[!] You are on master ‚Äì not deleting it."; fi; }; f'
git config --global alias.rom '!f() { BR=$(git rev-parse --abbrev-ref HEAD); echo "[*] Saving current branch: $BR"; git fetch origin && git checkout master && git pull origin master && git checkout "$BR" && echo "[>] Rebasing $BR onto origin/master..."; git rebase origin/master; }; f'
git config --global alias.safe-push '!f() { BR=$(git rev-parse --abbrev-ref HEAD); if [ "$BR" = "master" ]; then echo "‚ùå Refusing to force-push to master."; exit 1; fi; git fetch origin $BR; BASE=$(git merge-base $BR origin/$BR); REMOTE_HEAD=$(git rev-parse origin/$BR); LOCAL_HEAD=$(git rev-parse $BR); if [ "$BASE" = "$REMOTE_HEAD" ]; then echo "‚úÖ Safe to force push $BR"; git push --force-with-lease origin $BR; else echo "üö® Remote has new commits. Refusing to force push."; exit 1; fi; }; f'
