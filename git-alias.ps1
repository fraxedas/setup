git config --global alias.lg "log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(dim white)- %an%C(reset)%C(auto)%d%C(reset)' --all"
git config --global alias.done '!f() { BR=$(git rev-parse --abbrev-ref HEAD); if [ "$BR" != "master" ]; then echo "[*] Current branch: $BR"; echo "[>] Switching to master..."; git checkout master && echo "[>] Pulling latest changes..."; git pull origin master && echo "[>] Pruning remote-tracking branches..."; git fetch --prune && echo "[x] Deleting branch: $BR"; git branch -D "$BR"; else echo "[!] You are on master - not deleting it."; fi; }; f'
git config --global alias.rom '!f() { BR=$(git rev-parse --abbrev-ref HEAD); echo "[*] Saving current branch: $BR"; git fetch origin && echo "[>] Switching to master..."; git checkout master && echo "[>] Pulling latest changes..."; git pull origin master && echo "[>] Switching back to $BR..."; git checkout "$BR" && echo "[>] Rebasing $BR onto origin/master..."; git rebase origin/master; }; f'
git config --global alias.sync '!f() { BR=$(git rev-parse --abbrev-ref HEAD); if [ "$BR" = "master" ]; then echo "[x] Refusing to force-push to master."; exit 1; fi; echo "[>] Fetching latest from origin/$BR..."; git fetch origin "$BR"; echo "[>] Pushing with --force-with-lease..."; git push --force-with-lease origin "$BR"; }; f'
git config --global alias.change '!f() { BR="oscarfr/$1"; if git rev-parse --verify "$BR" >/dev/null 2>&1; then echo "[*] Switching to existing branch: $BR"; git checkout "$BR"; else echo "[>] Creating and switching to new branch: $BR"; git checkout -b "$BR"; echo "[>] Pushing branch and setting upstream to origin/$BR"; git push -u origin "$BR"; fi; }; f'
